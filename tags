!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/pawelm/mpi/projekt/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
*.embeddedhtml	.vscode/settings.json	/^        "*.embeddedhtml": "html",$/;"	s	object:files.associations
*.tcc	.vscode/settings.json	/^        "*.tcc": "c",$/;"	s	object:files.associations
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^                "-fdiagnostics-color=always",$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/tasks.json	/^                "-g",$/;"	s	array:tasks.0.args
2	.vscode/tasks.json	/^                "${file}",$/;"	s	array:tasks.0.args
3	.vscode/tasks.json	/^                "-o",$/;"	s	array:tasks.0.args
4	.vscode/tasks.json	/^                "${fileDirname}\/${fileBasenameNoExtension}"$/;"	s	array:tasks.0.args
ACK	util.h	/^#define ACK /;"	d
APP_PKT	util.h	/^#define APP_PKT /;"	d
DEBUG	main.h	/^#define DEBUG /;"	d
EMPTY	util.h	/^#define EMPTY /;"	d
FALSE	main.h	/^#define FALSE /;"	d
FINISH	util.h	/^#define FINISH /;"	d
FLAGS	Makefile	/^FLAGS=-DDEBUG -g$/;"	m
HEADERS	Makefile	/^HEADERS=$(SOURCES:.c=.h)$/;"	m
InFinish	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	e	enum:__anon213916590303
InMonitor	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	e	enum:__anon213916590303
InRun	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	e	enum:__anon213916590303
InSection	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	e	enum:__anon213916590303
InWant	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	e	enum:__anon213916590303
KURIER	util.h	/^#define KURIER /;"	d
M	util.h	/^#define M /;"	d
MAINH	main.h	/^#define MAINH$/;"	d
MPI_PAKIET_T	util.c	/^MPI_Datatype MPI_PAKIET_T;$/;"	v	typeref:typename:MPI_Datatype
NITEMS	util.h	/^#define NITEMS /;"	d
P	util.h	/^#define P /;"	d
RELEASE	util.h	/^#define RELEASE /;"	d
REQUEST	util.h	/^#define REQUEST /;"	d
ROOT	main.h	/^#define ROOT /;"	d
SEC_IN_STATE	main.h	/^#define SEC_IN_STATE /;"	d
SOURCES	Makefile	/^SOURCES=$(wildcard *.c)$/;"	m
STATE_CHANGE_PROB	main.h	/^#define STATE_CHANGE_PROB /;"	d
TRUE	main.h	/^#define TRUE /;"	d
UTILH	util.h	/^#define UTILH$/;"	d
WATEK_GLOWNY_H	watek_glowny.h	/^#define WATEK_GLOWNY_H$/;"	d
WATEK_KOMUNIKACYJNY_H	watek_komunikacyjny.h	/^#define WATEK_KOMUNIKACYJNY_H$/;"	d
WYCIECZKA	util.h	/^#define WYCIECZKA /;"	d
__anon213916590108	util.h	/^typedef struct {$/;"	s
__anon213916590208	util.h	/^typedef struct {$/;"	s
__anon213916590303	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	g
ackCount	main.c	/^int ackCount = 0;$/;"	v	typeref:typename:int
all	Makefile	/^all: main tags$/;"	t
args	.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
array	.vscode/settings.json	/^        "array": "c",$/;"	s	object:files.associations
changeState	util.c	/^void changeState(state_t newState)$/;"	f	typeref:typename:void
check_first	util.c	/^int check_first(queue_t *q)$/;"	f	typeref:typename:int
check_size	util.c	/^int check_size(queue_t *q)$/;"	f	typeref:typename:int
check_thread_support	main.c	/^void check_thread_support(int provided)$/;"	f	typeref:typename:void
check_type	util.c	/^int check_type(queue_t *q)$/;"	f	typeref:typename:int
clean	Makefile	/^clean:$/;"	t
clear	Makefile	/^clear: clean$/;"	t
command	.vscode/tasks.json	/^            "command": "\/usr\/bin\/gcc",$/;"	s	object:tasks.0
configurations	.vscode/launch.json	/^    "configurations": []$/;"	a
cwd	.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
debug	main.h	/^#define debug(/;"	d
deque	.vscode/settings.json	/^        "deque": "c",$/;"	s	object:files.associations
dequeue	util.c	/^int dequeue(queue_t *q)$/;"	f	typeref:typename:int
detail	.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
display	util.c	/^void display(queue_t *q)$/;"	f	typeref:typename:void
enqueue	util.c	/^int enqueue(int id, int typ, int size, queue_t *q)$/;"	f	typeref:typename:int
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
finalizuj	main.c	/^void finalizuj()$/;"	f	typeref:typename:void
forward_list	.vscode/settings.json	/^        "forward_list": "c",$/;"	s	object:files.associations
front	util.h	/^    int front;$/;"	m	struct:__anon213916590208	typeref:typename:int
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
ids	util.h	/^    int *ids;$/;"	m	struct:__anon213916590208	typeref:typename:int *
inicjuj_typ_pakietu	util.c	/^void inicjuj_typ_pakietu()$/;"	f	typeref:typename:void
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
isEmpty	util.c	/^int isEmpty(queue_t *q)$/;"	f	typeref:typename:int
isFull	util.c	/^int isFull(queue_t *q)$/;"	f	typeref:typename:int
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
label	.vscode/tasks.json	/^            "label": "C\/C++: gcc build active file",$/;"	s	object:tasks.0
lampMut	util.c	/^pthread_mutex_t lampMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
lamp_clock	main.c	/^int lamp_clock = 0;$/;"	v	typeref:typename:int
list	.vscode/settings.json	/^        "list": "c",$/;"	s	object:files.associations
main	Makefile	/^main: $(SOURCES) $(HEADERS) Makefile$/;"	t
main	main.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
mainLoop	watek_glowny.c	/^void mainLoop()$/;"	f	typeref:typename:void
max	watek_komunikacyjny.c	/^#define max(/;"	d	file:
name	util.c	/^    const char *name;$/;"	m	struct:tagNames_t	typeref:typename:const char *	file:
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
packet_t	util.h	/^} packet_t;$/;"	t	typeref:struct:__anon213916590108
perons_inside	util.h	/^    int perons_inside;$/;"	m	struct:__anon213916590208	typeref:typename:int
podprzestrzen	main.c	/^queue_t podprzestrzen;$/;"	v	typeref:typename:queue_t
println	main.h	/^#define println(/;"	d
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
queueMut	util.c	/^pthread_mutex_t queueMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
queue_t	util.h	/^} queue_t;$/;"	t	typeref:struct:__anon213916590208
rank	main.c	/^int rank, size;$/;"	v	typeref:typename:int
rear	util.h	/^    int rear;$/;"	m	struct:__anon213916590208	typeref:typename:int
rozmiar_grupy	util.h	/^    int rozmiar_grupy;$/;"	m	struct:__anon213916590108	typeref:typename:int
run	Makefile	/^run: main Makefile tags$/;"	t
sendPacket	util.c	/^void sendPacket(packet_t *pkt, int destination, int tag)$/;"	f	typeref:typename:void
size	main.c	/^int rank, size;$/;"	v	typeref:typename:int
size	util.h	/^    int size;$/;"	m	struct:__anon213916590208	typeref:typename:int
sizes	util.h	/^    int *sizes;$/;"	m	struct:__anon213916590208	typeref:typename:int *
src	util.h	/^    int src;  $/;"	m	struct:__anon213916590108	typeref:typename:int
stan	util.c	/^state_t stan = InRun;$/;"	v	typeref:typename:state_t
startKomWatek	watek_komunikacyjny.c	/^void *startKomWatek(void *ptr)$/;"	f	typeref:typename:void *
stateMut	util.c	/^pthread_mutex_t stateMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
state_t	util.h	/^typedef enum {InRun, InMonitor, InWant, InSection, InFinish  } state_t;$/;"	t	typeref:enum:__anon213916590303
string	.vscode/settings.json	/^        "string": "c",$/;"	s	object:files.associations
string_view	.vscode/settings.json	/^        "string_view": "c",$/;"	s	object:files.associations
tag	util.c	/^    int tag;$/;"	m	struct:tagNames_t	typeref:typename:int	file:
tag2string	util.c	/^const char *const tag2string(int tag)$/;"	f	typeref:typename:const char * const
tagNames	util.c	/^} tagNames[] = {{"pakiet aplikacyjny", APP_PKT}, {"finish", FINISH}, {"potwierdzenie", ACK}, {"p/;"	v	typeref:struct:tagNames_t[]
tagNames_t	util.c	/^struct tagNames_t$/;"	s	file:
tags	Makefile	/^tags: ${SOURCES} ${HEADERS}$/;"	t
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
threadKom	main.c	/^pthread_t threadKom;$/;"	v	typeref:typename:pthread_t
ts	util.h	/^    int ts;       \/* timestamp (zegar lamporta *\/$/;"	m	struct:__anon213916590108	typeref:typename:int
typ_grupy	util.h	/^    int typ_grupy;     \/* przykładowe pole z danymi; można zmienić nazwę na bardziej pasują/;"	m	struct:__anon213916590108	typeref:typename:int
type	.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
types	util.h	/^    int *types;$/;"	m	struct:__anon213916590208	typeref:typename:int *
util.h	.vscode/settings.json	/^        "util.h": "c",$/;"	s	object:files.associations
vector	.vscode/settings.json	/^        "vector": "c"$/;"	s	object:files.associations
version	.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
waiting	main.c	/^int *waiting;$/;"	v	typeref:typename:int *
waitingMut	util.c	/^pthread_mutex_t waitingMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
waitingSize	main.c	/^int waitingSize = 0;$/;"	v	typeref:typename:int
